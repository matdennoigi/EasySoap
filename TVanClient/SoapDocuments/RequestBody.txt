--MIME_boundary
Content-Type: text/xml; charset=UTF-8
Content-Transfer-Encoding: 8bit
Content-ID: <first-part>
Content-Location: http://claiming-it.com/claim061400a.xml

<?xml version='1.0' ?>
<soapenv:Envelope
  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:nhan="http://nhanhsothue.van.gdt.gov.vn/"
  xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <soapenv:Header>
    <wsse:Security>
      <wsse:UsernameToken>
        <wsse:Username>00010</wsse:Username>
        <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">hilo123456</wsse:Password>
      </wsse:UsernameToken>
    </wsse:Security>
  </soapenv:Header>
  <soapenv:Body>
    <nhan:nhanHSoXML>
      <nhan:tIN>2000266571</nhan:tIN>
      <nhan:maTKhai>01</nhan:maTKhai>
      <nhan:loaiTKhai>?</nhan:loaiTKhai>
      <nhan:kyKKhai>?</nhan:kyKKhai>
      <nhan:dlieuHSo>cid:1234567890</nhan:dlieuHSo>
    </nhan:nhanHSoXML>
  </soapenv:Body>
</soapenv:Envelope>

--MIME_boundary
Content-Type: text/xml;name=tkhai_seatech.xml
Content-Transfer-Encoding: base64
Content-ID: <1234567890>
Content-Disposition:attachment;name="tkhai_seatech.xml";filename="tkhai_seatech.xml"


--MIME_boundary--